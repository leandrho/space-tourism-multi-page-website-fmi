---
import type { GetStaticPaths } from "astro";
import MainLayout from "../../layouts/MainLayout.astro";
import { getDestination, getDestinationsTabLinks } from "../../utility/database";
import type { Destination } from "../../interfaces/data";
import type { NtLink } from "../../interfaces/nt-link";
import TabMenu from "../../components/TabMenu.astro";


export const getStaticPaths = (() => {
	const dests :NtLink[] = getDestinationsTabLinks();
	return dests.map( d => ({params: {name:`${d.name}`}}) );
}) satisfies GetStaticPaths;

const dests :NtLink[] = getDestinationsTabLinks();
const param = Astro.params;
const destino :Destination | undefined = getDestination(param.name);

---
<MainLayout>
	<section class="wrapper">
		<div class="content">
			<h2 class="page-title"><span>01</span> Pick your destination</h2>
			<div class="content-body">
				<div class="content-left">
					<figure class="figure">
						<img src={`${destino?.images.webp}`} alt="" class="img">
					</figure>
				</div>
				<div class="content-right">
					<div class="tab">
						<TabMenu tabLinks={dests} current={param.name}/>
					</div>
					<div class="data-content">
						<h2 class="title">{destino?.name}</h2>
						<p class="description">{destino?.description}</p>
					</div>
					<hr class="line">
					<div class="data-info">
						<div class="data">
							<h3 class="data-title">Avg. destance</h3>
							<p class="data-value">{destino?.distance}</p>
						</div>
						<div class="data">
							<h3 class="data-title">Est. travel time</h3>
							<p class="data-value">{destino?.travel}</p>
						</div>
					</div>
				</div>
			</div>
		</div>
		
	</section>
</MainLayout>

<style>
	.wrapper{
		width: 100%;
		display: flex;
		justify-content: center;
		padding	: var(--sp-600);
	}
	h2{
		color: hsl(var(--white));
		font-family: var(--ff-secondary);
		font-size: var(--fs-500);
		letter-spacing: 4px;
		text-transform: uppercase;
	}
	h2 span{
		color: hsl(var(--white),0.25);
		font-weight: bold;
	}
	.content{
		max-width: 1110px;
	}
	.content-body{
		height: 100%;
		color: hsl(var(--white));
		display: flex;
		align-items: center;

		gap: var(--sp-400);
	}
	.content-left, .content-right{
		width: 50%;
		display: flex;
		flex-direction: column;
	}
	.figure{
		display: flex;
		justify-content: center;
		padding-inline: var(--sp-200);
	}
	.img{
		width: 100%;
	}
	.content-right{
		padding-inline: var(--sp-600);
		gap: var(--sp-500);
	}
	.title{
		font-family: var(--ff-primary);
		font-size: var(--fs-800);
		letter-spacing: 0px;
	}
	.description{
		font-family: var(--ff-normal);
		font-size: var(--fs-400);
		letter-spacing: 0px;
		line-height: 1.8;
		color: hsl(var(--light-blue));
	}
	.data-content{
		display: flex;
		flex-direction: column;
		gap: var(--sp-150);
	}
	.data-info{
		display: flex;
		justify-content: space-between;
	}
	.data{
		display: flex;
		flex-direction: column;
		gap: var(--sp-150);
	}
	.data-title{
		font-family: var(--ff-secondary);
		font-size: var(--fs-200);
		letter-spacing: 2px;
		text-transform: uppercase;
		color: hsl(var(--light-blue));
	}
	.data-value{
		font-family: var(--ff-primary);
		font-size: var(--fs-500);
		letter-spacing: 0px;
		text-transform: uppercase;
	}
	.line{
		border: none;
		height: 1px;
		width: 100%;
		background-color: hsl(var(--white), 0.25);
	}
	.img{
		animation-name: rot;
		animation-duration: 200s;
		animation-timing-function: linear;
	}
	@keyframes rot {
		from{
			transform: rotate(0deg);
		}
		to{
			transform: rotate(360deg);
		}
	}
	@media screen and (max-width: 1024px) {
		.content{
			display: flex;
			flex-direction: column;
			gap: var(--sp-300);
			width: 100%;
		}
		h2{
			font-size: 20px;
		}
		.content-body{
			flex-direction: column;
		}
		.title{
			font-size: 80px;
		}
		.description{
			font-size: 16px;
		}
		.content-left, .content-right{
			width: 100%;
			height: 50%	;
		}
		.content-left{
			justify-content: center;
		}
		.content-right{
			max-width: 514px;
			text-align: center;
			padding: 0;
			gap: var(--sp-300);
		}
		.img{
			max-width: 300px;
		}
		.tab{
			display: flex;
			justify-content: center;
		}
		.data-info{
			justify-content: space-around;
			gap: var(--sp-300);
		}
    }
    @media screen and (max-width: 760px) {
		.wrapper{
			padding: var(--sp-300);
		}
		h2{
			font-size: 16px;
			text-align: center;
		}
		.figure{
			width: 100%;
			padding-inline: 0;
			padding-top: var(--sp-300);
			padding-bottom: var(--sp-100);
		}
		.img{
			min-width: 150px;
			width: 50%;
		}
		.content-left, .content-right{
			width: 100%;
			height: auto;
		}
		.content-right{
			min-height: 203px;
		}
		.title{
			font-size: 56px;
		}
		.description{
			font-size: 15px;
		}
		.data-info{
			flex-direction: column;
		}
	}
</style>
<style is:global>
	.background{
		background-color: hsl(var(--dark-blue));
	}
	.background::before{
		background-image: url(/assets/destination/background-destination-desktop.jpg);
		opacity: 90%;
	}
	@media screen and (max-width: 850px) {
		.background::before{
			background-image: url(/assets/destination/background-destination-tablet.jpg);
		}
    }
    @media screen and (max-width: 500px) {
		.background::before{
			background-image: url(/assets/destination/background-destination-mobile.jpg);
		}
		
	}
	
</style>